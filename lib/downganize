#!/bin/bash

PROD=false

LIB_DIR="/usr/share/downganizer/lib"

if [[ "$PROD" = false ]]; then
    LIB_DIR=$(echo "$SCRIPT_DIR" | sed 's/\/lib$//')/lib
fi

source "$LIB_DIR/utils"

downganize () {
    local dir="$HOME/Downloads"
    
    while IFS= read -r file; do
        if [ "$file" ] ; then
            dest=$(sort_file "$file")
            if [[ -n "$dest" ]]; then
                new_file=$(basename "$file")
                dups=$(get_config "DUPLICATES")
                if [[ "$dups" == "rename" && -e "$dest/$(basename "$file")" ]]; then
                    new_file=$(rename_file "$dest/$(basename "$file")")
                fi
                mv -f "$file" "$dest/$new_file"
            fi
        fi
    done < <(find "$dir" -maxdepth 1 -type f)
}

downganize_dry () {
    local dir="$HOME/Downloads"
    
    while IFS= read -r file; do
        if [ "$file" ] ; then
            dest=$(sort_file "$file")
            if [[ -n "$dest" ]]; then
                new_file=$(basename "$file")
                dups=$(get_config "DUPLICATES")
                if [[ "$dups" == "rename" && -e "$dest/$(basename "$file")" ]]; then
                    new_file=$(rename_file "$dest/$(basename "$file")")
                    echo "Would rename $file to $new_file"
                fi
                echo "Would move '$file' to '$dest/'"
            fi
        fi
    done < <(find "$dir" -maxdepth 1 -type f)
}

sort_file () {
    local file="$1"
    local dir="$HOME/Downloads"

    local siz=$(stat -c %s "$file")
    if [ "$siz" -eq 0 ]; then
        return
    fi

    local ext=$(echo "$file" | rev | cut -d '.' -f1 | rev)
    if [[ "$ext" == "temp" ]]; then
        return
    fi

    primary=$(get_config "CRITERIA")
    secondary=$(get_config "NESTED")

    if [[ "$primary" == "$secondary" ]]; then
        echo -e "${RED}Something went wrong. Please check your config file."
        exit 1
    fi

    if [[ "$primary" == "type" ]]; then
        dir=$(type_sort "$file" "$dir")
    elif [[ "$primary" == "month" ]]; then
        dir=$(month_sort "$file" "$dir")
    fi

    if [[ "$secondary" == "type" ]]; then
        dir=$(type_sort "$file" "$dir")
    elif [[ "$secondary" == "month" ]]; then
        dir=$(month_sort "$file" "$dir")
    fi

    echo "$dir"
}

type_sort() {

    local file="$1"
    local dir="$2"

    ext=$(echo "$file" | rev | cut -d '.' -f1 | rev)
    case "$ext" in
        jpg|jpeg|png|gif|bmp)
            dir="$dir/Images"
            ;;
        mp4|mkv|avi|mov|flv)
            dir="$dir/Videos"
            ;;
        mp3|wav|flac|aac|ogg)
            dir="$dir/Music"
            ;;
        zip|tar|gz|rar|7z)
            dir="$dir/Archives"
            ;;
        pdf|doc|docx|txt|odt|ppt|pptx)
            dir="$dir/Documents"
            ;;
        deb|rpm|exe|appimage|sh)
            dir="$dir/Installers"
            ;;
        *)
            dir="$dir/Others"
            ;;
    esac

    create_dir "$dir"

    echo "$dir"
}

month_sort(){
    local file="$1"
    local dir="$2"
    local month=$(stat -c %w "$file" )
    month=$(date -d "$month" +"%b %Y")

    dir="$dir/$month"

    create_dir "$dir"

    echo "$dir"
}

create_dir () {
    local dir="$1"
    if [[ ! -d "$dir" ]]; then
        mkdir -p "$dir"
    fi
}