#!/bin/bash

SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
LIB_DIR="/usr/share/downganizer/lib"

PROD=false

if [[ "$PROD" = false ]]; then
    LIB_DIR=$(echo "$SCRIPT_DIR" | sed 's/\/lib$//')/lib
fi

source "$LIB_DIR/theme"
source "$LIB_DIR/utils"

dg_config (){
    if [[ $# -eq 0 ]]; then
        config
    fi

    if [[ $1 == "help" ]]; then
        config_help
    fi

    if [[ $1 == "show" ]]; then
        show_config
    fi

    while [[ $# -ne 0 ]]; do
        if [[ $# -lt 2 ]]; then
            invalid_config;
        fi
        case $1 in
            "criteria") shift; 
                if [[ $1 == "month" || $1 == "type" ]]; then
                    set_criteria $1
                else
                    invalid_config
                fi
            ;;
            "nested") shift; 
                if [[ $1 == "type" || $1 == "month" || $1 == "false" ]]; then
                    set_nested $1
                else
                    invalid_config
                fi
            ;;
            "duplicates") shift;
                if [[ $1 == "overwrite" || $1 == "rename" ]]; then
                    set_dups  $1;
                else
                    invalid_config
                fi
            ;;
            *) invalid_config ;;
        esac
        shift;
    done

}

invalid_config() {
    echo -e "$RED""Invalid configuration data. Please refer to the documentation.$REGULAR";
    echo -e "Or try running $BOLD$0 config help$REGULAR"
    exit 1;
}

config_help() {
    echo "For more detailed information, please refer to the documentation at:"
    echo "  https://adekacci.in/projects/downganizer/"
    echo ""

    echo -e "To see ${BOLD}current configurations$REGULAR, run:"
    echo -e "  $GREEN$0 config show$REGULAR"
    echo ""

    echo -e "$BOLD""Usage:$REGULAR"
    echo "  $0 config [options]"
    echo ""

    echo "Example:"
    echo -e "  $BOLD$0 config criteria month$REGULAR"
    echo "This command sets the primary criteria for organizing files to 'month'."
    echo ""

    echo -e "$BOLD""Options:$REGULAR"
    echo -e "  $BOLD""criteria [month/type]$REGULAR: Set the primary criteria for organizing files."
    echo -e "  $BOLD""nested [type/month/false]$REGULAR: Set the secondary criteria for organizing files or disable it."
    echo -e "  $BOLD""duplicates [overwrite/rename]$REGULAR: Set how to handle duplicate file names."
    echo ""

    echo -e "$BOLD""You can also run '$GREEN$0 config$WHITE$BOLD' without any options to enter an interactive configuration mode.$REGULAR"
    exit 0
}

show_config(){
    echo -e "$BOLD""Current configurations: $WHITE"
    cat ~/.config/downganizer.conf | sed 's/false/disabled/' | sed 's/=/: /' | sed 's/^/   /'
    exit 0
}

config() {
    criteria=$(get_config "CRITERIA")

    prev_conf=$(cat ~/.config/downganizer.conf)
    echo -e "$GREEN""Current configurations: $WHITE$BOLD"
    cat ~/.config/downganizer.conf | sed 's/_/ /' | sed 's/=/: /' | sed 's/^/   /'
    echo -e "$REGULAR"

    crites=($(get_conf_options "CRITERIAS"))
    crites+=("skip")

    select_option "Select primary criteria:" "${crites[@]}"
    res=$?
    
    if [[ ${crites[$res]} != "skip" ]]; then
        set_criteria ${crites[$res]}
    fi


    criteria=$(get_config "CRITERIA")

    nests=($(get_conf_options "CRITERIAS"))
    nests=(${nests[@]/$criteria/})
    nests+=("disable" "skip")

    select_option "Select secondary criteria: " "${nests[@]}"
    res=$?

    if [[ ${nests[$res]} == "disable" ]]; then
        set_nested false
    elif [[ ${nests[$res]} != "skip" ]]; then
        set_nested ${nests[$res]}
    fi

    dups=($(get_conf_options "DUP_METHODS"))
    dups+=("skip")

    select_option "How to manage duplicate file names: " "${dups[@]}"
    res=$?

    if [[ ${dups[$res]} != "skip" ]]; then
        set_dups ${dups[$res]}
    fi

    echo ""
    new_conf=$(cat ~/.config/downganizer.conf)
    if [[ $prev_conf == $new_conf ]]; then
        echo -e "$YELLOW""No changes made to configurations.$REGULAR"
        exit 0
    fi
    echo -e "$GREEN""Updated configurations: $WHITE$BOLD"
    cat ~/.config/downganizer.conf | sed 's/_/ /' | sed 's/=/: /' | sed 's/^/   /'
    exit 0
}

select_option() {
    local ques="$1"
    shift;
    local options=("$@")
    local selected=0

    echo "$ques"
    while true; do
        ops=""
        for i in "${!options[@]}"; do
            if [ $i -eq $selected ]; then
                ops+="$GREEN${options[$i]}$WHITE | "
            else
                ops+="${options[$i]} | "
            fi
        done
        
        echo -e "${ops::-3}\r"
        
        read -rsn1 input
        if [[ $input == $'\x1b' ]]; then
            read -rsn2 input
            if [[ $input == '[D' ]]; then
                selected=$(( (selected - 1 + ${#options[@]}) % ${#options[@]} ))
            elif [[ $input == '[C' ]]; then
                selected=$(( (selected + 1) % ${#options[@]} ))
            fi
        elif [[ $input == "" ]]; then
            return $selected
        fi

        echo -ne "\033[1A\033[2K"
    done
}

# Individual config functions

set_criteria(){
    criteria=$(get_config "CRITERIA")
    if [[ $1 == "$criteria" ]]; then
        return;
    fi

    nested=$(get_config "NESTED")
    if [[ "$nested" == "$1" ]]; then
        sed -i "s/NESTED=$nested/NESTED=false/" ~/.config/downganizer.conf
    fi

    sed -i "s/CRITERIA=$criteria/CRITERIA=$1/" ~/.config/downganizer.conf
}

set_nested(){
    nested=$(get_config "NESTED")
    if [[ "$nested" == "$1" ]]; then
        return;
    fi

    criteria=$(get_config "CRITERIA")
    if [[ "$1" == "$criteria" ]]; then 
        echo -e "$RED""You can't set secondary criteria same as primary!$REGULAR";
        exit 1;
    fi

    sed -i "s/NESTED=$nested/NESTED=$1/" ~/.config/downganizer.conf
    return;
}

set_dups() {
    dup=$(get_config "DUPLICATES")
    if [[ "$dup" == "$1" ]]; then
        return;
    fi

    sed -i "s/DUPLICATES=$dup/DUPLICATES=$1/" ~/.config/downganizer.conf
}

